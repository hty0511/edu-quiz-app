openapi: 3.0.3
info:
  title: Main API Documentation
  description: Central documentation entry for the API.
  version: 1.0.0
paths:
  /express-api/users/:
    post:
      tags:
        - user
      summary: Create a user
      operationId: createUser
      security:
        - BearerAuth: []
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: User's unique username.
                  minLength: 3
                  maxLength: 10
                  nullable: false
                  unique: true
                password:
                  type: string
                  description: User's password.
                  minLength: 6
                  maxLength: 20
                  nullable: false
                token:
                  type: string
                  description: Token for authentication.
                isAdmin:
                  type: boolean
                  description: Flag indicating if the user is an admin.
                  default: false
                  nullable: false
        required: true
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the created user.
                  message:
                    type: string
                    description: Confirmation message for user creation.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message for failed user creation.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized or invalid token provided.
  /express-api/users/login:
    post:
      tags:
        - user
      summary: Login a user
      operationId: login
      requestBody:
        required: true
        description: User credentials
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  description: The password of the user.
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the authenticated user.
        '400':
          description: Unable to login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message for failed login attempt.
  /express-api/users/logout:
    post:
      tags:
        - user
      summary: Logout a user
      operationId: logout
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message for user logout.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized or invalid token provided.
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Description of the internal server error.
  /express-api/users/me/password:
    patch:
      tags:
        - user
      summary: Change user password
      operationId: changePassword
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: The new password for the user.
                  minLength: 6
                  maxLength: 20
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message for password update.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: 'Description of the error, such as "Failed to update the password."'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized or invalid token provided.
  /express-api/cpp-quizzes/progresses:
    post:
      tags:
        - cpp-quiz
      summary: Create a CppQuizProgress
      operationId: createCppQuizProgress
      security:
        - BearerAuth: []
      requestBody:
        required: true
        description: CppQuizProgress information
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: integer
                  description: Reference to the user's ID.
                  nullable: false
                  unique: true
                currentRound:
                  type: integer
                  description: Current round of the quiz for the user.
                  default: 1
                  nullable: false
                currentQuestion:
                  type: string
                  description: Current question or stage in the quiz.
                  enum:
                    - Q1
                    - Q1_FEEDBACK
                    - Q1_DISCUSSION
                    - Q2
                    - Q3
                  default: Q1
                  nullable: false
                group:
                  type: string
                  description: The group to which the user belongs for the quiz.
                  enum:
                    - NOT_SPECIFIED
                    - CONTROL
                    - NON_ADAPTIVE
                    - ADAPTIVE
                    - EXCLUDED
                  default: NOT_SPECIFIED
                  nullable: false
      responses:
        '201':
          description: CppQuizProgress created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message for CppQuizProgress creation.
        '400':
          description: Failed to create CppQuizProgress
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message for failed CppQuizProgress creation.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Unauthorized or invalid token provided.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: User's unique username.
          minLength: 3
          maxLength: 10
          nullable: false
          unique: true
        password:
          type: string
          description: User's password.
          minLength: 6
          maxLength: 20
          nullable: false
        token:
          type: string
          description: Token for authentication.
        isAdmin:
          type: boolean
          description: Flag indicating if the user is an admin.
          default: false
          nullable: false
    CppQuizProgress:
      type: object
      required:
        - userId
      properties:
        userId:
          type: integer
          description: Reference to the user's ID.
          nullable: false
          unique: true
        currentRound:
          type: integer
          description: Current round of the quiz for the user.
          default: 1
          nullable: false
        currentQuestion:
          type: string
          description: Current question or stage in the quiz.
          enum:
            - Q1
            - Q1_FEEDBACK
            - Q1_DISCUSSION
            - Q2
            - Q3
          default: Q1
          nullable: false
        group:
          type: string
          description: The group to which the user belongs for the quiz.
          enum:
            - NOT_SPECIFIED
            - CONTROL
            - NON_ADAPTIVE
            - ADAPTIVE
            - EXCLUDED
          default: NOT_SPECIFIED
          nullable: false
